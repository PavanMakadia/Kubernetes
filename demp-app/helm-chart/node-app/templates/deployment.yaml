{{- if .Values.gateway.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-{{ .Values.appName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName }}
    env: {{ .Values.appEnvironment }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
      env: {{ .Values.appEnvironment }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
        env: {{ .Values.appEnvironment }}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.containers.image.repository }}:{{ .Values.containers.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.containers.image.pullPolicy }}
          env:
          - name: DEFAULT_FEATURE
            value: {{ .Values.env.DEFAULT_FEATURE }}
          - name: ASPNETCORE_ENVIRONMENT
            value: {{ .Values.appEnvironment }}
          ports:
            - name: http
              containerPort: {{ .Values.containers.ports.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.containers.healthChecks.path }}
              port: {{ .Values.containers.ports.containerPort }}
            initialDelaySeconds: {{ .Values.containers.healthChecks.initialDelaySeconds }}
            periodSeconds: {{ .Values.containers.healthChecks.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.containers.healthChecks.path }}
              port: {{ .Values.containers.ports.containerPort }}
            initialDelaySeconds: {{ .Values.containers.healthChecks.initialDelaySeconds }}
            periodSeconds: {{ .Values.containers.healthChecks.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: cache-volume
              mountPath: /tmp
            {{- if .Values.configmap.enabled }}
            - name: configfile
              mountPath: /app/config.json
              subPath: config.json
            {{- end }}
      volumes:
      - hostPath:
          path: /tmp/node-app
        name: cache-volume
      {{- if .Values.configmap.enabled }}
      - configMap:
          defaultMode: 420
          items:
            - key: config.json
              path: config.json
          name: cnf-configfile
        name: configfile
      {{- end }}  
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}